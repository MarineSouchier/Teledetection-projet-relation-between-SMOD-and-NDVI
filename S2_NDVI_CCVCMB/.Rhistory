setwd("Desktop/TP Teledec/TP/")
setwd("C:/Users/souch/Desktop/TP Teledec/TP")
#Calcul NDVI maximal
#Calcul NDVI 2020
rastlist.2020 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020 <- stack(lapply(rastlist.2020, raster)) #Application fonction raster a la liste
plot(rasters.2020[[1]])
#substr(rastlist.2020, 31,32) #Selection des mis de juin à aout
#rasters.2020.ete <- rasters.2020[[7:21]] #2e possibilite pour selection des mis de juin à aout
NDVImax.2020 <- max(rasters.2020, na.rm=T)
plot(NDVImax.2020)
NDVImax.2020_df <- as.matrix(rasters.2020)
#Calcul NDVI 2021
rastlist.2021 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2021', all.files=TRUE, full.names=T)
rasters.2021 <- stack(lapply(rastlist.2021, raster))
plot(rasters.2021[[1]])
NDVImax.2021 <- max(rasters.2021, na.rm=T)
plot(NDVImax.2021)
NDVImax.2021_df <- as.matrix(rasters.2021)
#Calcul NDVI 2017
rastlist.2017 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017 <- stack(lapply(rastlist.2017, raster))
plot(rasters.2017[[1]])
NDVImax.2017 <- max(rasters.2017, na.rm=T)
plot(NDVImax.2017)
NDVImax.2017_df <- as.matrix(rasters.2017)
#Calcul NDVI 2018
rastlist.2018 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2018', all.files=TRUE, full.names=T)
rasters.2018 <- stack(lapply(rastlist.2018, raster))
plot(rasters.2018[[1]])
NDVImax.2018 <- max(rasters.2018, na.rm=T)
plot(NDVImax.2018)
NDVImax.2018_df <- as.matrix(rasters.2018)
#Calcul NDVI 2019
rastlist.2019 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2019', all.files=TRUE, full.names=T)
rasters.2019 <- stack(lapply(rastlist.2019, raster))
plot(rasters.2019[[1]])
NDVImax.2019 <- max(rasters.2019, na.rm=T)
plot(NDVImax.2019)
#Eliminer valeurs "NA" et avoir le meme nombre de pixels
length(NDVImax.2017[which(!is.na(NDVImax.2017[]))])
length(NDVImax.2018[which(!is.na(NDVImax.2018[]))])
length(NDVImax.2019[which(!is.na(NDVImax.2019[]))])
length(NDVImax.2020[which(!is.na(NDVImax.2020[]))])
length(NDVImax.2021[which(!is.na(NDVImax.2021[]))])
NDVImax.2020<-mask(NDVImax.2020, NDVImax.2021)
NDVImax.2021<-mask(NDVImax.2021, NDVImax.2020)
NDVImax.2017<-mask(NDVImax.2017, NDVImax.2020)
NDVImax.2018<-mask(NDVImax.2018, NDVImax.2020)
NDVImax.2019<-mask(NDVImax.2019, NDVImax.2020)
plot(NDVImax.2017)
#Former le data frame
NDVI2017 <- data.frame(NDVI2017=NDVImax.2017[which(!is.na(NDVImax.2017[]))])
NDVI2018 <- data.frame(NDVI2018=NDVImax.2018[which(!is.na(NDVImax.2018[]))])
NDVI2019 <- data.frame(NDVI2019=NDVImax.2019[which(!is.na(NDVImax.2019[]))])
NDVI2020 <- data.frame(NDVI2020=NDVImax.2020[which(!is.na(NDVImax.2020[]))])
NDVI2021 <- data.frame(NDVI2021=NDVImax.2021[which(!is.na(NDVImax.2021[]))])
NDVI_all <- cbind(NDVI2017,NDVI2018, NDVI2019, NDVI2020, NDVI2021)
View(NDVI_all)
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021)
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021) )
ndvi_pixel
ndvi_pixel = data.frame(NDVI = NDVI_all[1,], Year = c(2017:2021) )
View(ndvi_pixel)
ndvi_pixel = data.frame(NDVI = NDVI_all[1,], Year = c(2017:2021) )
View(ndvi_pixel)
ndvi_pixel = data.frame(NDVI = NDVI_all[1,], Year = c(2017:2021))
Greening <- data.frame(Pente = rep(NA, nrow(NDVI_all)),
Pvalue = rep(NA, nrow(NDVI_all)))
View(Greening)
ndvi_pixel = drop_na(ndvi_pixel)
ndvi_pixel = data.frame(NDVI = NDVI_all[2,], Year = c(2017:2021))
View(ndvi_pixel)
NDVI_all[2,]
Year = c(2017:2021)
ndvi_pixel = data.frame(NDVI = NDVI_all[2,], Year = c(2017:2021))
View(ndvi_pixel)
Year = c(2017:2021)
Year = c(2017:2021)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente
Greening <- data.frame(Pente = rep(NA, nrow(NDVI_all)),
Pvalue = rep(NA, nrow(NDVI_all)))
for(n in 1:nrow(s_matrix)){
ndvi_pixel = data.frame(NDVI = NDVI_all[2,], Year = c(2017:2021))
ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
View(Greening)
Greening <- data.frame(Pente = rep(NA, nrow(NDVI_all)),
Pvalue = rep(NA, nrow(NDVI_all)))
for(n in 1:nrow(s_matrix)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
View(Greening)
View(ndvi_pixel)
ndvi_pixel = data.frame(NDVI = NDVI_all[2,], Year = c(2017:2021))
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
View(Greening)
NDVI = NDVI_all[3,]
data.frame(NDVI = NDVI_all[3,], Year = c(2017:2021))
View(NDVI_all)
ndvi_pixel = data.frame(NDVI = NDVI_all[3,], Year = c(2017:2021))
View(ndvi_pixel)
Pvalue = rep(NA, nrow(NDVI_all)))
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
library(dplyr)
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
View(NDVI_all)
View(NDVI_all)
NDVI_all[3,]
Year = c(2017:2021)
c(2017:2021)
ndvi_pixel = data.frame(NDVI = NDVI_all[3,], Year = c(2017:2021))
View(ndvi_pixel)
str(NDVI_all[3,])
ndvi_pixel = data.frame(NDVI = as.vector(NDVI_all[3,]), Year = c(2017:2021))
View(ndvi_pixel)
View(ndvi_pixel)
as.vector(NDVI_all[3,])
as.vector(unlist(NDVI_all[3,]))
ndvi_pixel = data.frame(NDVI = as.vector(unlist(NDVI_all[3,])), Year = c(2017:2021))
View(ndvi_pixel)
NDVI_all <- as.matrix(cbind(NDVI2017,NDVI2018, NDVI2019, NDVI2020, NDVI2021))
View(NDVI_all)
View(NDVI_all)
str(NDVI_all)
str(NDVI_all[3,])
ndvi_pixel = data.frame(NDVI = (NDVI_all[3,]), Year = c(2017:2021))
ndvi_pixel = data.frame(NDVI = NDVI_all[3,], Year = c(2017:2021))
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[3,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
install.packages("mblm")
library(mblm)
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[3,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
View(Greening)
View(Greening)
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
NDVI_pente <- NDVImax.2017
View(Greening)
View(Greening)
NDVI_pente[which(!is.na(NDVI_pente[]))]=Greening[,"Pente"]
plot(NDVI_pente)
writeRaster(NDVI_pente, "NDVI_pente.tif")
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
NDVI_pente <- NDVImax.2017
NDVI_pente[which(!is.na(NDVI_pente[]))]=Greening[,"Pente"]
plot(NDVI_pente)
writeRaster(NDVI_pente, "NDVI_pente.tif")
plot(NDVI_pente)
NDVI_pente <- NDVImax.2017
NDVI_pente[which(!is.na(NDVI_pente[]))]=Greening[,"Pente"]
plot(NDVI_pente)
plot(NDVI_pente)
NDVI_pente <- NDVImax.2017
NDVI_pente[which(!is.na(NDVI_pente[]))]=Greening[,"Pente"]
plot(NDVI_pente)
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
?rowwise
Greening_Sign <- Greening[Pvalue<0.05,]
Greening$Pvalue
Greening <- data.frame(Pente = rep(NA, nrow(NDVI_all)),
Pvalue = rep(NA, nrow(NDVI_all)))
for(n in 1:nrow(NDVI_all)){
ndvi_pixel = data.frame(NDVI = NDVI_all[n,], Year = c(2017:2021))
#ndvi_pixel = drop_na(ndvi_pixel)
Pente <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,1] # valeur de pente, mblm meilleur modèle quand peu de valeurs dispos
Pvalue <- summary(mblm(NDVI ~ Year, data=ndvi_pixel))$coefficients[2,4]
Greening[n,"Pente"] <- Pente
Greening[n,"Pvalue"] <- Pvalue
}
View(Greening)
summary(Greening)
source("C:/Users/souch/Desktop/TP Teledec/TP/Index.R")
rastlist <- list.files(path = "/Users/souch/Documents/Master Ecomont/TP Teledec/USMB_cours/Documents pour le TD/S2_NDVI_CCVCMB", pattern='.tif$', all.files=TRUE, full.names=T)
library(raster)
allrasters <- lapply(rastlist, raster)
allrasters
allrasters <- stack(rastlist)
setwd("C:/Users/souch/Desktop/TP Teledec/TP")
setwd("Desktop/TP Teledec/TP/")
setwd(".")
setwd(".")
setwd(".")
rastlist.2020 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020 <- stack(lapply(rastlist.2020, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP")
rasters.2020
plot(rasters.2020[[1]])
rastlist.2020 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020 <- stack(lapply(rastlist.2020, raster))
rasters.2020 <- stack(lapply(rastlist.2020, raster))
rasters.2020
library(raster)
library(dplyr)
library(mblm)
rastlist.2020 <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020 <- stack(lapply(rastlist.2020, raster))
rasters.2020 <- stack(lapply(rastlist.2020, raster))
rasters.2020
plot(rasters.2020[[1]])
rasters.2020[[1]]
plot(rasters.2020[[1]])
rastlist.2020.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rastlist.2020.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020.NDVI <- stack(lapply(rastlist.2020, raster))
rasters.2020.NDVI
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rasters.2017.NDVI
rastlist.2018.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2018', all.files=TRUE, full.names=T)
rasters.2018.NDVI <- stack(lapply(rastlist.2018.NDVI, raster))
rasters.2018.NDVI
rastlist.2019.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2019', all.files=TRUE, full.names=T)
rasters.2019.NDVI <- stack(lapply(rastlist.2019.NDVI, raster))
rasters.2019.NDVI
rastlist.2020.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020.NDVI <- stack(lapply(rastlist.2020.NDVI, raster))
rasters.2020.NDVI
rastlist.2021.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2021', all.files=TRUE, full.names=T)
rasters.2021.NDVI <- stack(lapply(rastlist.2021.NDVI, raster))
setwd("~/4A/ECOMONT/Cours/B_Carlson/USMB_cours")
CCVCMB <- shapefile("Boundaries_infrastructure/Communes/CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
library(tiff)
install.packages("tiff")
library(rgdal)
library(tiff)
library(rgeol)
library(rgeos)
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
library(raster)
library(dplyr)
library(mblm)
library(tiff)
library(rgdal)
library(rgeos)
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rasters.2017.NDVI
rastlist.2018.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2018', all.files=TRUE, full.names=T)
rasters.2018.NDVI <- stack(lapply(rastlist.2018.NDVI, raster))
rastlist.2019.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2019', all.files=TRUE, full.names=T)
rasters.2019.NDVI <- stack(lapply(rastlist.2019.NDVI, raster))
rastlist.2020.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020.NDVI <- stack(lapply(rastlist.2020.NDVI, raster))
rastlist.2021.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2021', all.files=TRUE, full.names=T)
rasters.2021.NDVI <- stack(lapply(rastlist.2021.NDVI, raster))
rasters.2020.NDVI
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
setwd("C:\Users\souch\Desktop\TP Teledec\TP\Communes")
setwd("Users\souch\Desktop\TP Teledec\TP\Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
setwd("Users\souch\Desktop\TP Teledec\TP\Communes")
setwd("Users\souch\Desktop\TP Teledec\TP\Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- spTransform(CCVCMB, CRS = crs("+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs ")) #Reprojection
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- shapefile(~"CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
readOGR(dsn=path.expand("C:/Users/souch/Desktop/TP Teledec/TP/Communes"), layer="CC_Vallee_CHAMONIX.shp")
readOGR(dsn=path.expand("C:/Users/souch/Desktop/TP Teledec/TP/Communes"), layer="CC_Vallee_CHAMONIX.shp")
```{r}
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
```{r, knitr root.dir}
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/S2_NDVI_CCVCMB")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rasters.2017.NDVI
rastlist.2018.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2018', all.files=TRUE, full.names=T)
rasters.2018.NDVI <- stack(lapply(rastlist.2018.NDVI, raster))
rastlist.2019.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2019', all.files=TRUE, full.names=T)
rasters.2019.NDVI <- stack(lapply(rastlist.2019.NDVI, raster))
rastlist.2020.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2020', all.files=TRUE, full.names=T)
rasters.2020.NDVI <- stack(lapply(rastlist.2020.NDVI, raster))
rastlist.2021.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2021', all.files=TRUE, full.names=T)
rasters.2021.NDVI <- stack(lapply(rastlist.2021.NDVI, raster))
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- shapefile("CC_Vallee_CHAMONIX.shp")
CCVCMB <- spTransform(CCVCMB, CRS = crs("+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs "))
library(terra)
SMOD_17 <- raster("SMOD_CCVCMB_2017.tif")
SMOD_17
CCVCMB
SMOD_17 <- resample(x = SMOD_17, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_17 <- raster("SMOD_CCVCMB_2017.tif")
SMOD_18 <- raster("SMOD_CCVCMB_2018.tif")
SMOD_19 <- raster("SMOD_CCVCMB_2019.tif")
SMOD_20 <- raster("SMOD_CCVCMB_2020.tif")
SMOD_21 <- raster("SMOD_CCVCMB_2021.tif")
SMOD_17 <- resample(x = SMOD_17, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_17
SMOD_17 <- resample(x = SMOD_17, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_18 <- resample(x = SMOD_18, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_19 <- resample(x = SMOD_19, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_20 <- resample(x = SMOD_20, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_21 <- resample(x = SMOD_21, y = rasters.2020.NDVI[[1]], method = "bilinear")
plot(SMOD_17)
plot(rasters.2020.NDVI[[1]])
SMOD_17 <- mask(SMOD_17, CCVCMB)
SMOD_18 <- mask(SMOD_18, CCVCMB)
SMOD_19 <- mask(SMOD_19, CCVCMB)
SMOD_20 <- mask(SMOD_20, CCVCMB)
SMOD_21 <- mask(SMOD_21, CCVCMB)
SMOD_17 <- resample(x = SMOD_17, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_18 <- resample(x = SMOD_18, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_19 <- resample(x = SMOD_19, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_20 <- resample(x = SMOD_20, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_21 <- resample(x = SMOD_21, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_17M <- mask(SMOD_17, CCVCMB)
SMOD_18M<- mask(SMOD_18, CCVCMB)
SMOD_19M<- mask(SMOD_19, CCVCMB)
SMOD_20M<- mask(SMOD_20, CCVCMB)
SMOD_21M<- mask(SMOD_21, CCVCMB)
plot(SMOD_17)
plot(SMOD_17M)
SMOD_17
SMOD_17 <- raster("SMOD_CCVCMB_2017.tif")
SMOD_18 <- raster("SMOD_CCVCMB_2018.tif")
SMOD_19 <- raster("SMOD_CCVCMB_2019.tif")
SMOD_20 <- raster("SMOD_CCVCMB_2020.tif")
SMOD_21 <- raster("SMOD_CCVCMB_2021.tif")
SMOD_17 <- resample(x = SMOD_17, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_18 <- resample(x = SMOD_18, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_19 <- resample(x = SMOD_19, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_20 <- resample(x = SMOD_20, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_21 <- resample(x = SMOD_21, y = rasters.2020.NDVI[[1]], method = "bilinear")
SMOD_17M <- mask(SMOD_17, CCVCMB)
SMOD_18M<- mask(SMOD_18, CCVCMB)
SMOD_19M<- mask(SMOD_19, CCVCMB)
SMOD_20M<- mask(SMOD_20, CCVCMB)
SMOD_21M<- mask(SMOD_21, CCVCMB)
plot(SMOD_17)
plot(SMOD_17M)
setwd(".")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
setwd(".")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd(".")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd(".")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd(".")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd(".")
setwd("C:/Users/souch/Desktop/TP Teledec/TP")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rastlist.2018.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2018', all.files=TRUE, full.names=T)
rasters.2018.NDVI <- stack(lapply(rastlist.2018.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/S2_NDVI_CCVCMB")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
library(raster)
library(dplyr)
library(mblm)
library(tiff)
library(rgdal)
library(rgeos)
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
library(raster)
library(dplyr)
library(mblm)
library(tiff)
library(rgdal)
library(rgeos)
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rastlist.2019.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2019', all.files=TRUE, full.names=T)
rasters.2019.NDVI <- stack(lapply(rastlist.2019.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
library(raster)
library(dplyr)
library(mblm)
library(tiff)
library(rgdal)
library(rgeos)
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/S2_NDVI_CCVCMB")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/S2_NDVI_CCVCMB")
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
setwd("C:/Users/souch/Desktop/TP Teledec/TP/Communes")
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
rastlist.2017.NDVI <- list.files(path = "S2_NDVI_CCVCMB", pattern='2017', all.files=TRUE, full.names=T)
rasters.2017.NDVI <- stack(lapply(rastlist.2017.NDVI, raster))
